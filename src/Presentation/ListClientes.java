/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import DAO.ClienteDAO;
import Entity.Cliente;
import java.util.ArrayList;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author Diego
 */
public class ListClientes extends javax.swing.JInternalFrame {
    
    private ArrayList<Cliente> clientes;

    /**
     * Creates new form ListarClientes
     */
    public ListClientes() {
        clientes = new ClienteDAO().getClientes();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximizable(true);
        setTitle("Lista de Clientes");
        setToolTipText("");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Telefone", "Email", "Endereço", "Número", "UF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    class MyModel implements TableModel{
        ArrayList<Cliente> listClientes = null;

        public MyModel(ArrayList<Cliente> clientes) {
            this.listClientes = clientes;
        }
        
        @Override
        public int getRowCount() {
            return this.listClientes.size();
        }

        @Override
        public int getColumnCount() {
            return Cliente.getCOUNT_COLUMMS();
        }

        @Override
        public String getColumnName(int columnIndex) {
            String name = "";
            
            //FALTA TERMINAR SAPOHA
            
            switch(columnIndex) {
                case 0:
                    name = "Nome / Razão";
                    break;
                    
                case 1:
                    name = "Endereço";
                    break;
                    
                case 2:
                    name = "Número";
                    break;
                    
                case 3:
                    name = "UF";
                    break;
                    
                case 4:
                    name = "CNPJ / CPF";
                    break;
                    
                case 5:
                    name = "Telefone";
                    break;
                    
                case 6:
                    name = "E-mail";
                    break;
                    
                default:
                    break;
            }
            
            return name;
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return Cliente.class;
        }
        
        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Cliente cliente = listClientes.get(rowIndex);
            Object value = null;
            
            //FALTA TERMINAR SAPOHA
            
            switch (columnIndex) {
                case 0:
                    value = cliente.getNomeRazao();
                    break;
                case 1:
                    value = cliente.getEndereco();
                    break;
                    
                case 2:
                    value = cliente.getNum();
                    break;
                    
                case 3:
                    value = cliente.getUF();
                    break;
                    
                case 4:
                    value = cliente.getCpfCNPJ();
                    break;
                    
                case 5:
                    value = cliente.getTelefone();
                    break;
                    
                case 6:
                    value = cliente.getEmail();
                    break;
                    
            }
            return value;
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
